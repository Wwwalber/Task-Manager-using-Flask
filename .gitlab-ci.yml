stages:
  - lint
  - test
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

lint_job:
  stage: lint
  image: python:3.9-slim-buster
  script:
    - pip install -r requirements.txt
    - black . --check
    - flake8 .
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

test_job:
  stage: test
  image: python:3.9-slim-buster
  services:
    - postgres:13
  variables:
    POSTGRES_DB: taskmanager_test
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
  script:
    - pip install -r requirements.txt
    - pytest --cov=./ --cov-report=xml
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

build_job:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t taskmanager:$CI_COMMIT_SHA .
    - docker tag taskmanager:$CI_COMMIT_SHA taskmanager:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

deploy_job:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "Deploy to production server"
    # Adicione aqui os comandos específicos para seu ambiente de produção
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  needs:
    - build_job
