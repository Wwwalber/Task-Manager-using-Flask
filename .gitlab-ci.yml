stages:
  - compile
  - test
  - build

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

# Regras para as ramificações
workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "staging" || $CI_COMMIT_BRANCH == "development"
      when: always

compile_job:
  stage: compile
  image: python:3.9-slim-buster
  script:
    - pip install -r requirements.txt
    - python -m compileall .
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "staging" || $CI_COMMIT_BRANCH == "development"

test_unit_job:
  stage: test
  image: python:3.9-slim-buster
  script:
    - pip install -r requirements.txt
    - pytest tests/unit/ --cov=./ --cov-report=xml
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "staging" || $CI_COMMIT_BRANCH == "development"

test_integration_job:
  stage: test
  image: python:3.9-slim-buster
  services:
    - postgres:13
  variables:
    POSTGRES_DB: taskmanager_test
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
  script:
    - pip install -r requirements.txt
    - pytest tests/integration/ --cov=./ --cov-report=xml
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "staging" || $CI_COMMIT_BRANCH == "development"

test_functional_job:
  stage: test
  image: python:3.9-slim-buster
  services:
    - postgres:13
  variables:
    POSTGRES_DB: taskmanager_test
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
  script:
    - pip install -r requirements.txt
    - pytest tests/functional/ --cov=./ --cov-report=xml
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "staging" || $CI_COMMIT_BRANCH == "development"

build_job:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t taskmanager:$CI_COMMIT_SHA .
    - docker tag taskmanager:$CI_COMMIT_SHA taskmanager:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "staging" || $CI_COMMIT_BRANCH == "development"
